import math

def drawLine(x1, y1, x2, y2, steps=50):
    for i in range(steps + 1):
        t = i / steps
        x = x1 + (x2 - x1) * t
        y = y1 + (y2 - y1) * t
        # Minecraft command to spawn a particle at (x, y, 0)
        particle minecraft:dust{scale:1.0f,color:[1.0f,0.0f,0.0f]} x y 0

def getProjected(x, y, z, f=15):
    px = (x * f) / (z + f)
    py = (y * f) / (z + f)
    return [px, py]

vertex = [
    # bottom
    (-5, -5, -5),
    (5, -5, -5),
    (5, -5, 5),
    (-5, -5, 5),
    # top
    (-5, 5, -5),
    (5, 5, -5),
    (5, 5, 5),
    (-5, 5, 5)
]

edge = [
    # bottom
    (0, 1),
    (1, 2),
    (2, 3),
    (3, 0),
    # top
    (4, 5),
    (5, 6),
    (6, 7),
    (7, 4),
    # pillars
    (0, 4),
    (1, 5),
    (2, 6),
    (3, 7)
]

def getRotated(x, y, z, theta):
    rx = x * math.cos(theta) + z * math.sin(theta) 
    rz = -x * math.sin(theta) + z * math.cos(theta)
    return [rx, y, rz]

def drawCube(theta):
    for a, b in edge:
        A1 = vertex[a]
        B1 = vertex[b]
        A2 = getRotated(A1[0], A1[1], A1[2], theta)
        B2 = getRotated(B1[0], B1[1], B1[2], theta)
        A3 = getProjected(A2[0], A2[1], A2[2])
        B3 = getProjected(B2[0], B2[1], B2[2])
        drawLine(A3[0], A3[1], B3[0], B3[1])

function example:update:
    scoreboard players add @p[scores={timer=..360}] timer 1
    for frame in range(360):
        execute if score @p timer matches frame:
            drawCube(2 * math.pi / 360 * frame)
    execute if score @p timer matches 360 run scoreboard players set @p timer 0

    # extra for youtube thumbnail
    execute if score @p timer matches 361:
        drawCube(210)

function example:thumbnail:
    scoreboard players set @p timer 361